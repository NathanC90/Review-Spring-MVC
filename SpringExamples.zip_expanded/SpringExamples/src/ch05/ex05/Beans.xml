<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd ">
<!-- 
Spring對於JNDI的支援分為兩種:
(1) JndiTemplate類別: 可簡化傳統Java程式對於JNDI Lookup的撰寫 (此點幫助不大，NG)
傳統Java程式的寫法: 
Context context = new InitailContext();
DataSource ds = (DataSource)context.lookup("java:comp/env/jdbc/MemberDS");
使用 JndiTemplate類別的寫法: 
JndiTemplate  jndiTemplate = new JndiTemplate();
DataSource ds = (DataSource)jndiTemplate.lookup("java:comp/env/jdbc/MemberDS");

(2) JndiObjectFactoryBean: 可以用依賴注入的方式：提供JNDI資源的識別字串就可得到
    DataSource物件。(幫助很大，OK)
     
  <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/MemberDataBase" />
  </bean>
-->

<!-- 
Spring與Web Applcation有關的類別與介面:
1. WebApplicationContext: 它就是用於Web Application的ApplicationContext。
   // 此介面的定義如下: 
   public interface WebApplicationContext extends ApplicationContext { 
           ServletContext getServletContext(); 
   } 

WebApplicationContext是WebApplicationContext的子介面，經由此介面可以得
到ServletContext物件 sc，有了ServletContext物件就可以使用其所提供的功能，
例如：sc.getResourceAsStream()，所以它可與容器產生某種程度的關聯，適合用在
Web Application上。

2. WebApplicationContextUtil輔助類別:
       下列敘述可以 Servlet/JSP取得ApplicationContext物件，進而取的由Spring控管
       的Bean物件以便執行程式的企業邏輯或DAO：
       
   WebApplicationContext context = 
       WebApplicationContextUtils.getWebApplicationContext(getServletContext());
   
3. org.springframework.web.context.ContextLoaderListener
       但是天下沒有白吃的午餐，我們必須使用Spring提供的ContextLoaderListener類別(它實作
   ServletContextListener介面)，讓此Lisntener在容器啟動時，幫我們自動建立
   WebApplicationContext物件，同時讀入組態設定檔，以便開始管理Bean物件的生成。
        因此必須在web.xml檔內加入下列標籤: 
   <listener>
      <listener-class> 
        org.springframework.web.context.ContextLoaderListener
      </listener-class>
   </listener>
   
4. 在web.xml檔內利用<context-param>標籤指定Spring組態檔的位置，定義參數名稱的
   <param-name>寫上contextConfigLocation(注意大小寫), <param-value>
       可以指定多個組態檔，但必須用逗號、分號或空白隔開。
       注意：可以省略下列一組標籤，此時預設值為 /WEB-INF/applicationContext.xml(注意大小寫)
       
   <context-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>
         /WEB-INF/Beans.xml
         /WEB-INF/Application.xml
      </param-value>
   </context-param>   
   
-->

	<bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName" value="java:comp/env/jdbc/MemberDataBase" />
	</bean>
	<bean id="memberDAO" class="ch05.ex01.model.MemberSpring_JDBC_DAO">
      <constructor-arg ref="dataSource"/>
   </bean>
	<bean id="message" class="ch05.ex10.SystemMessage">
		<property name="message" value="大家好" />
	</bean>
</beans>